:root {
    --white-color: #fff;
    --black-color: #000;
    --border-radius: 0.125rem;
    --blue-border-color: #1890FF;
    --blue-bg-and-text-color: #096DD9;
    --hover-bg-and-text-color: #40A9FF;
    --one-rem: 1rem;
    --half-rem: 0.5rem;
    --point-75rem: 0.75rem;
    --disable-bg-color: #F5F5F5;
    --gray-border-color: #D9D9D9;
    --font-size-point-875rem: 0.875rem;
    --disable-gray-icon-color: #BFBFBF;
}

.btn {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    gap: var(--half-rem);
    border-radius: var(--border-radius);
    transition: 0.3s;
    background: var(--bg, var(--white-color));
    border: 1px var(--border-style, none) var(--border-color, none);
    color: var(--text-color, var(--white-color));
}

.btn svg {
    width: var(--one-rem);
    height: var(--one-rem);
    display: none;
}

.btn svg path {
    fill: var(--text-color);
}

.btn.content-icon-with-label .search-icon {
    display: block;
}

.btn button {
    padding: 0;
    margin: 0;
    outline: none;
    border: none;
    background: transparent;
    color: var(--text-color);
    cursor: pointer;
    font-size: var(--one-rem);
}





.btn.content-icon-only {
    padding: var(--point-75rem) !important;
}

.btn.content-icon-only .search-icon {
    display: block;
}

.btn.content-icon-only div {
    display: none;
}




.btn.size-default {
    padding: 0.3125rem var(--one-rem);
}

.btn.size-large {
    padding: var(--half-rem) var(--one-rem);
}

.btn.size-small {
    padding: 0.0625rem var(--half-rem);
}




.btn.type-primary {
    --bg: var(--blue-border-color);
    --hover-bg: var(--hover-bg-and-text-color);
    --pressed-bg: var(--blue-bg-and-text-color);
    --text-color: var(--white-color);
    --hover-and-focus-text-color: var(--text-color);
    --pressed-text-color: var(--text-color);
}

.btn.type-default {
    --border-style: solid;
    --text-color: var(--black-color);
}

.btn.type-dashed {
    --border-style: dashed;
    --text-color: var(--black-color);
}

.btn.type-text {
    --bg: none;
    --text-color: var(--black-color);
    --hover-and-focus-text-color: var(--text-color);
    --pressed-text-color: var(--text-color);

}

.btn.type-link {
    --bg: none;
    --hover-bg: none;
    --pressed-bg: none;
    --border-style: none;
    --text-color: var(--blue-border-color);
}

.btn.type-default,
.btn.type-dashed,
.btn.type-link {
    --hover-and-focus-text-color: var(--hover-bg-and-text-color);
    --pressed-text-color: var(--blue-bg-and-text-color);
    --border-color: var(--gray-border-color);
}

.btn.type-primary,
.btn.type-default,
.btn.type-dashed {
    --disable-bg: var(--disable-bg-color);
}




.btn:hover,
.btn:focus {
    background: var(--hover-bg, var(--white-color));
    border: 1px var(--border-style) var(--hover-and-focus-text-color);
    color: var(--hover-and-focus-text-color);
}

.btn:active {
    background: var(--pressed-bg, var(--white-color));
    border: 1px var(--border-style) var(--pressed-text-color);
    color: var(--pressed-text-color);
}




.btn.state-default {
    cursor: pointer;
}

.btn.state-loading .loading-icon {
    display: block;
    animation: rotate 1s linear infinite;
}

.btn.state-loading .search-icon {
    display: none;
}

.btn.state-loading {
    opacity: 0.65;
    --hover-and-focus-text-color: var(--text-color);
    --pressed-text-color: var(--text-color);
    --pressed-bg: var(--bg);
    --hover-bg: var(--bg);
    --border-style: none;
}

.btn.state-disable {
    --text-color: #BFBFBF;
    --hover-and-focus-text-color: var(--text-color);
    --pressed-text-color: var(--text-color);
    --pressed-bg: var(--bg);
    --hover-bg: var(--bg);
    background: var(--disable-bg);
}

.btn.state-disable button {
    cursor: auto;
}

.btn.type-primary.state-disable {
    --border-style: solid;
    --border-color: var(--gray-border-color);
}

.btn.type-dashed.state-disable,
.btn.type-primary.state-disable,
.btn.type-default.state-disable {
    border: 1px var(--border-style) var(--border-color);
}

@keyframes rotate {
    0% {
        transform: rotate(0);
    }

    100% {
        transform: rotate(360deg);
    }
}








.input-container {
    display: grid;
    width: 20rem;
    padding: var(--half-rem) var(--point-75rem);
    align-items: center;
    gap: 0.625rem;
    border-radius: var(--border-radius);
    border: 1px solid var(--inp-border-color, var(--gray-border-color));
    background: var(--inp-box-bg, var(--white-color));
    box-shadow: 0px 0px 4px 0px var(--inp-box-shadow-color, none);
    transition: 0.3s;
}

.input-container input {
    outline: none;
    border: none;
}

.input-container input::placeholder {
    font-family: Roboto;
    color: #8C8C8C;
}

.input-container svg {
    display: none;
}

.input-container .prefix-suffix-text {
    font-size: var(--font-size-point-875rem);
    display: none;
}




.input-container.size-large {
    padding: var(--half-rem) var(--point-75rem);
}

.input-container.size-large input::placeholder {
    font-size: var(--one-rem);
}

.input-container.size-default {
    padding: 0.3125rem var(--point-75rem);
}

.input-container.size-default input::placeholder {
    font-size: var(--font-size-point-875rem);
}

.input-container.size-small {
    padding: 0.0625rem var(--half-rem);
}

.input-container.size-small .prefix-suffix-text {
    font-size: var(--point-75rem);
}




.input-container.type-placeholder-only {
    grid-template-columns: auto;
}

.input-container.type-icon-left {
    grid-template-columns: var(--one-rem) auto;

}

.input-container.type-icon-left .person-icon.left {
    display: block;
}

.input-container.type-icon-right {
    grid-template-columns: auto var(--one-rem);

}

.input-container.type-icon-right .person-icon.right {
    display: block;
}

.input-container.type-two-icons {
    grid-template-columns: var(--one-rem) auto var(--one-rem);

}

.input-container.type-two-icons .person-icon.left,
.input-container.type-two-icons .about-icon {
    display: block;
}

.input-container.type-prefix-suffix {
    grid-template-columns: 2.1rem auto 2.1rem;

}

.input-container.type-prefix-suffix .prefix-suffix-text {
    display: block;
}




.input-container:hover {
    --inp-border-color: var(--blue-border-color);

}

.input-container:focus-within {
    --inp-border-color: var(--blue-border-color);
    --inp-box-shadow-color: rgba(24, 144, 255, 0.50);
}


.input-container.state-disable {
    --inp-box-bg: var(--disable-bg-color);
    --inp-border-color: var(--gray-border-color);
    --inp-box-shadow-color: none !important;
}

.input-container.state-disable input {
    background: var(--disable-bg-color);
}

.input-container.state-disable input, .input-container.state-disable input:: placeholder {
    color: var(--disable-gray-icon-color);
}

.input-container.state-disable svg path {
    fill: var(--disable-gray-icon-color);
}